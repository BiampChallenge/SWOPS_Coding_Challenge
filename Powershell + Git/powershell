# This PowerShell script prompts the user to enter a Git repository URL, a local directory to clone the repository to, and a branch to checkout.
$repoUrl = Read-Host "Enter Git repository URL"
$localDir = Read-Host "Enter a local directory to clone the repository to"
$branch = Read-Host "Enter a git branch name to checkout"

# Validate the repository URL and directory path, and create the directory if it does not exist
if (-not $localDir) {
    New-Item -ItemType Directory -Path $localDir | Out-Null
}

# Clone the repository to the local directory and check out the specified branch
cd $localDir
git clone $repoUrl .
git checkout $branch

# Retrieve the latest changes from the remote repository
git pull

# List all branches in the repository, including remote branches
git branch -a

# Prompt the user to select a branch to view the commit history for
$selectedBranch = Read-Host "Enter a branch name to view  the commit history"

# Validate the selected branch and display the commit history for the branch
if (git branch --list $selectedBranch) {
    git log --oneline --graph $selectedBranch
} else {
    Write-Host "Invalid branch name"
    exit 1
}

# Prompt the user to select a commit to view the details for
$selectedCommit = Read-Host "select a commit hash to view the details"

# Validate the selected commit and display the commit details, including the author, date, and files changed
if (git log --pretty=oneline | Select-String -SimpleMatch $selectedCommit) {
    git show --format="%H%n%an%n%ad%n" --name-only $selectedCommit
} else {
    Write-Host "Invalid commit hash"
    exit 1
}
# Validate the repository URL and directory path, and create the directory if it does not exist
if (-not $localDir) {
    New-Item -ItemType Directory -Path $localDir | Out-Null
}

# Clone the repository to the local directory and check out the specified branch
cd $localDir
git clone $repoUrl .
git checkout $branch

# Retrieve the latest changes from the remote repository
git pull

# List all branches in the repository, including remote branches
git branch -a

# Prompt the user to select a branch to view the commit history for
$selectedBranch = Read-Host "Enter a branch name to view  the commit history"

# Validate the selected branch and display the commit history for the branch
if (git branch --list $selectedBranch) {
    git log --oneline --graph $selectedBranch
} else {
    Write-Host "Invalid branch name"
    exit 1
}

# Prompt the user to select a commit to view the details for
$selectedCommit = Read-Host "select a commit hash to view the details"

# Validate the selected commit and display the commit details, including the author, date, and files changed
if (git log --pretty=oneline | Select-String -SimpleMatch $selectedCommit) {
    git show --format="%H%n%an%n%ad%n" --name-only $selectedCommit
} else {
    Write-Host "Invalid commit hash"
    exit 1
}